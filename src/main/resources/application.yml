# 기본설정
spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: rabbit
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    database: mysql
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${GOOGLE_REDIRECT_URL}
            scope: profile,email
            client-name: Google

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URL}
            scope: name,email
            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}   # 필요 없으면 제거 가능
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope: account_email, profile_nickname, profile_image
            client-name: Kakao

          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${GITHUB_REDIRECT_URL}
            scope: user:email
            client-name: GitHub

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
cors:
  allowed-origins: 
    - "http://localhost:3000"
    - "http://localhost:8080"

jwt:
  secret: ${JWT_SECRET}
# jwt:
#   secret: ${JWT_SECRET:this_is_a_very_long_random_secret_key_32bytes_minimum}

server:
  port: 8080

logging:
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
        security: DEBUG
        hibernate: DEBUG

# prod 프로필
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL_PROD}
    username: ${DB_USERNAME_PROD}
    password: ${DB_PASSWORD_PROD}
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: validate 
    properties:
      hibernate:
        format_sql: true
    database: mysql
    show-sql: false

logging:
  level:
    root: INFO
    org:
      springframework:
        web: INFO
        security: WARN
        hibernate: WARN