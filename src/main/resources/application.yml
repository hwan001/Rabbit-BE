spring:
  profiles:
    active: dev
  config:
    import: optional:file:.env[.properties]
  application:
    name: rabbit
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${GOOGLE_REDIRECT_URL}
            scope: profile,email
            client-name: Google
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URL}
            scope: name,email
            client-name: Naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope: profile_nickname
            client-name: Kakao
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: ${GITHUB_REDIRECT_URL}
            scope: user:email
            client-name: GitHub

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id
  cloud:
    config:
      enabled: false


cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

jwt:
  secret: ${JWT_SECRET}

openai:
  api-key: ${OPENAI_API_KEY}
  base-url: https://api.openai.com/v1

app:
  security:
    cookie:
      secure: false
      same-site: lax
    redirect-uri: ${FE_REDIRECT_URL}
    jwt:
      access-expiry: 900  # 15분 (60 * 15)
      refresh-expiry: 86400  # 24시간 (60 * 60 * 24)

server:
  port: 8080

logging:
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
        security: DEBUG
        hibernate: DEBUG

---

spring:
  config:
    activate:
      on-profile: test

  jpa:
    hibernate:
      ddl-auto: update 

---
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate 
    show-sql: false

logging:
  level:
    root: INFO
    org:
      springframework:
        web: INFO
        security: WARN
        hibernate: WARN

app:
  security:
    cookie:
      secure: true
      same-site: Strict